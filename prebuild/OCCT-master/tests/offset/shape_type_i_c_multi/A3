puts "========"
puts "0031148: Offset adjacent co-planar faces with different offset values"
puts "========"
puts ""

pload MODELING

polyline p 0 0 0 10 0 0 10 0 2 8 0 2 6 0 2 6 0 5 6 0 8 4 0 8 4 0 5 4 0 2 2 0 2 0 0 2 0 0 0
mkplane f p
prism s f 0 10 0

# right top side: faces 3 and 4
# right side: faces 5 and 6
# left side: faces 8 and 9
# left top side: faces 10 and 11

# unset draw variables for all offset values
foreach val {0 1 2 3 4} {
  foreach x [directory r${val}*_unif] {
    unset $x
  }
}

perform_offset_multi_with_ref r0_01 s 0 {3 4 5 6 8 9 10 11} {1 2 1 2 2 1 2 1} {516 580 18 18} 0
perform_offset_multi_with_ref r0_02 s 0 {3 6 8 11} {4 3 3 4} {688 640 22 18} 1
perform_offset_multi_with_ref r0_03 s 0 {3 6 8 11} {4 5 5 4} {748 740 22 18} 1
perform_offset_multi_with_ref r0_04 s 0 {3 6 8 11} {10 5 6 8} {918 890 30 26} 1
perform_offset_multi_with_ref r0_05 s 0 {3 6 8 11} {2 4 4 2} {728 640 18 18} 1

perform_offset_multi_with_ref r1_01 s 1 {} {} {672 864 14 14} 0
perform_offset_multi_with_ref r1_02 s 1 {3 6 8 11} {2 2 2 2} {796 1032 18 18} 1
perform_offset_multi_with_ref r1_03 s 1 {3 6 8 11} {3 2 2 3} {856 1104 22 18} 1
perform_offset_multi_with_ref r1_04 s 1 {3 6 8 11} {4 3 3 4} {880 1248 22 18} 1
perform_offset_multi_with_ref r1_05 s 1 {3 6 8 11} {4 5 5 4} {904 1392 18 14} 1
perform_offset_multi_with_ref r1_06 s 1 {3 6 8 11} {4 6 6 4} {968 1488 22 18} 1
perform_offset_multi_with_ref r1_07 s 1 {3 6 8 11} {6 6 6 6} {968 1488 22 18} 1
perform_offset_multi_with_ref r1_08 s 1 {3 6 8 11} {8 6 6 10} {1088 1632 30 26} 1

perform_offset_multi_with_ref r2_01 s 2 {} {} {968 1680 12 12} 0
perform_offset_multi_with_ref r2_02 s 2 {6 8} {4 4} {1120 1960 14 14} 1
perform_offset_multi_with_ref r2_03 s 2 {3 11} {4 4} {1000 1904 10 10} 0
perform_offset_multi_with_ref r2_04 s 2 {3 6 8 11} {4 7 7 4} {1140 2492 10 10} 1

perform_offset_multi_with_ref r3_01 s 3 {} {} {1312 2816 10 10} 0

perform_offset_multi_with_ref r4_01 s 4 {} {} {1704 4320 10 10} 0

foreach val {0 1 2 3 4} {
  foreach x [directory r${val}*_unif] {
    if {[isdraw $x]} {
      checkview -display $x -2d -path ${imagedir}/${test_image}_$x.png
    }
  }
}

copy r0_01 result
copy r0_01_unif result_unif
