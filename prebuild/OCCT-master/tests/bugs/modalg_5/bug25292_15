puts "================"
puts "OCC25292"
puts "================"
puts ""
#######################################################################
# Face/Face intersection algorithm gives different results for different order of the arguments
#######################################################################

puts "##############################"
puts "#!!!Search \"Attention\" keyword on this web-page for additional checking!!!"
puts "##############################"
puts ""

# intersect command

#This value must be equal to the analogical value in bug25292_11, bug25292_12, bug25292_15 and bug25292_16 of "bugs modalg_5" testgrid. 
set GoodNbCurv 4

restore [locate_data_file bug25292_Input_0.brep] b1
restore [locate_data_file bug25292_Input_1.brep] b2

explode b1 f
copy b1_2 f1
explode b2 f
copy b2_2 f2

mksurface s1 f1
mksurface s2 f2

#################
intersect res s1 s2
#################

set che [whatis res]
set ind [string first "3d curve" $che]
if {${ind} >= 0} {
  #Only variable "res" exists
  renamevar res res_1
}

set ic 1
set AllowRepeate 1
while { $AllowRepeate != 0 } {
  set che [whatis res_$ic]
  set ind [string first "3d curve" $che]
  if {${ind} < 0} {
    set AllowRepeate 0
  } else {
    display res_$ic
    
    bounds res_$ic U1 U2
    
    dval U1
    dval U2
    
    if {[dval U2-U1] < 1.0e-20} {
      puts "Error: Wrong curve's range!"
    }
    
    xdistcs res_$ic s1 U1 U2 10 1.0e-7
    xdistcs res_$ic s2 U1 U2 10 1.0e-7
    
    incr ic
  }
}

if {[expr {$ic - 1}] == $GoodNbCurv} {
  puts "OK: Curve Number is good!"
} else {
  puts "Error: Curve Number is bad!"
}
