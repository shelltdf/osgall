puts "================"
puts "OCC2932"
puts "================"
puts ""
#######################################################################################
# Create Attribute Delta depending on actual change of the attribute 
#######################################################################################
# Case 13 (TDataStd_Real)
#######################################################################################

# Create a new document and set UndoLimit
NewDocument D BinOcaf
UndoLimit D 100

# Create a label and set attributes
NewCommand D
set Label 0:2

############################################
set Real 100.
############################################

set Integer1 300
set Integer2 400
set modified_attribute TDataStd_Integer

############################################
# Set TDataStd_Real
SetReal D ${Label} ${Real}
############################################

SetInteger D ${Label} ${Integer1}
set list [DumpCommand D]

# Open a transaction
NewCommand D
set list [DumpCommand D]

############################################
# Set old value for TDataStd_Real
SetReal D ${Label} ${Real}
############################################

# Set new value for TDataStd_Integer
SetInteger D ${Label} ${Integer2}
set list [DumpCommand D]

# Open a transaction
NewCommand D
set list [DumpCommand D]

# Checking
set ll [llength ${list}]
set good_length 17
puts "length = ${ll}"
puts "good_length = ${good_length}"

if { ${ll} != ${good_length} } {
  puts "OCC2932 Error (case 1)"
} else {
  set name_attribute [lindex ${list} [expr ${good_length} - 1]]
  puts "name_attribute = ${name_attribute}"
  puts "modified_attribute = ${modified_attribute}"
  if {[string compare ${name_attribute} ${modified_attribute}] == 0} {
    puts "OCC2932 OK"
  } else {
    puts "OCC2932 Error (case 2)"
  }
}
