#
# Copyright (c) 2019-2023 Ruben Perez Hidalgo (rubenperez038 at gmail dot com)
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)
#

name: Build Docker images

on: workflow_dispatch


jobs:
  build-and-push-image:
    strategy:
      matrix:
        include:
          - { image: build-msvc14_1,  dockerfile: build-msvc,      os: windows-2019, base-image: "cppalliance/dronevs2017:1" }
          - { image: build-msvc14_2,  dockerfile: build-msvc,      os: windows-2019, base-image: "cppalliance/dronevs2019:1" }
          - { image: build-msvc14_3,  dockerfile: build-msvc,      os: windows-2019, base-image: "cppalliance/dronevs2022:1" }
          - { image: build-clang3_6,  dockerfile: build-clang3_6,  os: ubuntu-latest }
          - { image: build-clang7,    dockerfile: build-clang7,    os: ubuntu-latest }
          - { image: build-clang11,   dockerfile: build-clang11,   os: ubuntu-latest }
          - { image: build-clang14,   dockerfile: build-clang14,   os: ubuntu-latest }
          - { image: build-gcc5,      dockerfile: build-gcc5,      os: ubuntu-latest }
          - { image: build-gcc6,      dockerfile: build-gcc6,      os: ubuntu-latest }
          - { image: build-gcc10,     dockerfile: build-gcc10,     os: ubuntu-latest }
          - { image: build-gcc11,     dockerfile: build-gcc11,     os: ubuntu-latest }
          - { image: build-cmake3_8,  dockerfile: build-cmake3_8,  os: ubuntu-latest }
          - { image: build-noopenssl, dockerfile: build-noopenssl, os: ubuntu-latest }
          - { image: build-docs,      dockerfile: build-docs,      os: ubuntu-latest }
          - { image: mysql5,          dockerfile: mysql5,          os: ubuntu-latest }
          - { image: mysql8,          dockerfile: mysql8,          os: ubuntu-latest }
          - { image: mariadb,         dockerfile: mariadb,         os: ubuntu-latest }
    permissions:
      contents: read
      packages: write

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: anarthal-containers
          password: ${{ secrets.ANARTHAL_CONTAINERS_TOKEN }}
      
      - name: Build and push Docker image
        run: |
          FULL_IMAGE=ghcr.io/anarthal-containers/${{ matrix.image }}
          if [ "${{ matrix.base-image }}" != "" ]; then BUILD_ARG="--build-arg BASE_IMAGE=${{ matrix.base-image }}"; fi
          docker build -f tools/docker/${{ matrix.dockerfile }}.dockerfile $BUILD_ARG -t $FULL_IMAGE:$GITHUB_SHA -t $FULL_IMAGE:latest .
          docker push $FULL_IMAGE --all-tags
